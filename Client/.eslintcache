[{"C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\App.js":"1","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\Input\\Input.js":"2","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\index.js":"3","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\InfoBar\\InfoBar.js":"4","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\Additions\\fileNameFormatter.js":"5","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\TextContainer\\TextContainer.js":"6","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\Messages\\Messages.js":"7","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\FileSpawn\\FileSpawn.js":"8","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\Chat\\Chat.js":"9","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\ImageShower\\ImageShower.js":"10"},{"size":252,"mtime":1614191756836,"results":"11","hashOfConfig":"12"},{"size":4068,"mtime":1614970058564,"results":"13","hashOfConfig":"12"},{"size":147,"mtime":1606934159000,"results":"14","hashOfConfig":"12"},{"size":729,"mtime":1606934159000,"results":"15","hashOfConfig":"12"},{"size":381,"mtime":1606934159000,"results":"16","hashOfConfig":"12"},{"size":905,"mtime":1614367526634,"results":"17","hashOfConfig":"12"},{"size":2219,"mtime":1606934159000,"results":"18","hashOfConfig":"12"},{"size":727,"mtime":1606934159000,"results":"19","hashOfConfig":"12"},{"size":5674,"mtime":1614968892177,"results":"20","hashOfConfig":"12"},{"size":1922,"mtime":1606934159000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"p3t7ql",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\App.js",[],["48","49"],"C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\Input\\Input.js",["50"],"import React, { Component } from \"react\";\nimport { BlobServiceClient } from \"@azure/storage-blob\";\nimport \"./Input.css\";\nimport myInitObject from \"../Additions/publicVar.js\";\nvar fileInLoadKey = false;\nclass Input extends Component {\n  async uploadFile(file) {\n    const SAS_TOKEN =\n      \"?sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-11-30T16:28:17Z&st=2020-11-30T08:28:17Z&spr=https,http&sig=4ArE7Cljg1Kz%2BL%2BVjbTn9%2FHocXhdOqaqgfRtgh6lehk%3D\";\n    const sasURL = `https://${myInitObject[\"accountName\"]}.blob.core.windows.net/${ myInitObject[\"sastoken\"]}`;\n\n    const blobServiceClient = new BlobServiceClient(sasURL);\n\n    const containerClient = blobServiceClient.getContainerClient(\n      myInitObject[\"container\"]\n    );\n\n    const filename = file.name.substring(0, file.name.lastIndexOf(\".\"));\n    const ext = file.name.substring(file.name.lastIndexOf(\".\"));\n    const blobName = filename + \"_\" + new Date().getTime() + ext;\n    const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n\n    fileInLoadKey = true;\n    let type = file.type;\n    await blockBlobClient.uploadData(file);\n\n    fileInLoadKey = false;\n    if (\n      type === \"image/png\" ||\n      type === \"image/gif\" ||\n      type === \"image/jpeg\" ||\n      type === \"image/webp\" \n    ) {\n      this.props.setMessageType(\"image\");\n    } else {\n      this.props.setMessageType(\"file\");\n    }\n\n    this.props.setFileName(blobName);\n    this.props.sendFile();\n    this.props.setMessageType(\"text\");\n    let inputs = document.querySelector(\".inputFile\");\n    inputs.value = \"\";\n    if (inputs.value) {\n      inputs.type = \"text\";\n      inputs.type = \"file\";\n    }\n    this.props.setSelectedFile(null);\n    this.props.setLoaded(0);\n  }\n\n  sendMessageFunction = async (e) => {\n    console.log(myInitObject);\n    let inputField = document.getElementsByClassName(\"input\");\n    this.props.setMessageType(\"text\");\n    inputField[0].focus();\n    this.props.setMessage(\"\");\n    this.props.sendMessage(e);\n  };\n\n  onChangeHandler = async (event) => {\n    this.formatingFile(event.target.files);\n  };\n\n  formatingFile = async (files) => {\n    if (!fileInLoadKey) {\n      if (files[0].size > 52428800) {\n        alert(\"Файл занадто великий(max 50mb)\");\n      } else {\n        this.props.setSelectedFile(files);\n        this.uploadFile(files[0]);\n      }\n    } else {\n      alert(\"Дочекайся завантаження попереднього файлу\");\n    }\n  };\n\n  onKeyboardPressed = (event) => {\n    var items = (event.clipboardData || event.originalEvent.clipboardData)\n      .items;\n    for (let index in items) {\n      var item = items[index];\n      if (item.kind === \"file\") {\n        var blob = item.getAsFile();\n\n        let blobs = [blob];\n        this.formatingFile(blobs);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"form\">\n        <textarea\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          value={this.props.message}\n          onKeyPress={(event) =>\n            event.key === \"Enter\" ? this.sendMessageFunction(event) : null\n          }\n          onChange={({ target: { value } }) => this.props.setMessage(value)}\n          onPaste={(e) => this.onKeyboardPressed(e)}\n        />\n        <input\n          type=\"file\"\n          hidden=\"hidden\"\n          className=\"inputFile\"\n          onChange={this.onChangeHandler}\n        ></input>\n        <img\n          src={process.env.PUBLIC_URL + \"/attachment.svg\"}\n          alt=\"paperclip\"\n          style={{ cursor: \"pointer\" }}\n          onClick={(e) => {\n            const inputFile = document.querySelector(\".inputFile\");\n            inputFile.click();\n          }}\n          className=\"paperClipButton\"\n        />\n\n        <img\n          src={process.env.PUBLIC_URL + \"/send.svg\"}\n          alt=\"send\"\n          style={{ cursor: \"pointer\" }}\n          className=\"sendButton\"\n          onClick={async (e) => {\n            this.sendMessageFunction(e);\n          }}\n        ></img>\n      </form>\n    );\n  }\n}\n\nexport default Input;\n","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\index.js",[],["51","52"],"C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\InfoBar\\InfoBar.js",[],"C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\Additions\\fileNameFormatter.js",[],"C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\TextContainer\\TextContainer.js",[],["53","54"],"C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\Messages\\Messages.js",[],"C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\FileSpawn\\FileSpawn.js",[],["55","56"],"C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\Chat\\Chat.js",["57"],"import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport TextContainer from \"../TextContainer/TextContainer\";\nimport Messages from \"../Messages/Messages\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport FileSpawn from \"../FileSpawn/FileSpawn\";\nimport Modal from \"react-modal\";\nimport _ from \"lodash\"\n\nimport \"./Chat.css\";\n\nlet socket;\nlet curLoadedcount = 0;\nlet userName;\nlet IsOpen = true;\n\n\nconst Chat = ({ location }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loaded, setLoaded] = useState(0);\n  const [messageType, setMessageType] = useState(\"text\");\n  const [fileName, setFileName] = useState(\"\");\n  const [messageDate, setMessageDate] = useState(new Date());\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n  const ENDPOINT = process.env.REACT_APP_API_URL;\n\n  useEffect(() => {\n    const { name, room, room_id, secret } = queryString.parse(location.search);\n    socket = io.connect(ENDPOINT,{\n      reconnection:false\n    });\n    socket.on('connect', function () {\n\n\n      socket.emit(\"join\", { name, room_id, secret }, (error) => {\n        if (error) {\n          alert(\"Помилка авторизації\");\n        }\n      });\n      process.env.REACT_APP_CONTAINER_NAME = \"Hello\";\n      userName = name;\n      setRoom(room);\n      setName(name);\n  })\n    \n\n    socket.on(\"display-chat\", ({ messages, col }) => {\n      curLoadedcount = col;\n      setMessages([]);\n      for (let i = 0; i < messages.length; i++) {\n        let { user, text, type, date } = messages[i];\n        setMessages((messages) => [\n          ...messages,\n          {\n            user: user,\n            text: text,\n            type: type,\n            date: date,\n          },\n        ]);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on(\"message\", async (message) => {\n      console.log(message);\n\n      setMessages((messages) => [...messages, message]);\n      if (message.user !== userName) {\n        let audio = document.getElementById(\"output\");\n        audio.play();\n      }\n    });\n\n    socket.on(\"loaded-old-message\", ({ message, col }) => {\n      curLoadedcount = col;\n      setMessages((messages) => [...message, ...messages]);\n    });\n\n    socket.on(\"file\", (message) => {\n      setMessages((messages) => [...messages, message]);\n      if (message.user !== userName) {\n        let audio = document.getElementById(\"output\");\n        audio.play();\n      }\n    });\n\n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(_.unionBy(users,\"name\"));\n    });\n    socket.on('disconnect', function (){      setMessages([]);});\n  }, []);\n\n  window.addEventListener(\"resize\", function () {\n    if (window.innerWidth === 0) {\n      if (IsOpen) {\n        IsOpen = false;\n\n        socket.emit(\"setOpend\", { status: false });\n      }\n    } else {\n      if (!IsOpen) {\n        IsOpen = true;\n        socket.emit(\"setOpend\", { status: true });\n      }\n    }\n  });\n\n  const sendMessage = async (event) => {\n    console.log(process.env.REACT_APP_CONTAINER_NAME);\n    event.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", { message, messageType, messageDate }, () => {\n        setMessage(\"\");\n      });\n\n      let audio = document.getElementById(\"input\");\n      audio.play();\n    }\n  };\n\n  const getStorageData = async() =>{\n\n  }\n  const sendFile = (/*event*/) => {\n    /*  event.persist();*/\n    if (fileName) {\n      socket.emit(\n        \"sendMessage\",\n        { message: fileName, messageType, messageDate },\n        () => {\n          setFileName(\"\");\n        }\n      );\n    }\n    let audio = document.getElementById(\"input\");\n    audio.play();\n  };\n\n  return (\n    <div className=\"outerContainer\">\n      <audio\n        preload=\"metadata\"\n        id=\"input\"\n        src=\"https://chat.tss2020.site/files/input.mp3\"\n      ></audio>\n      <audio\n        preload=\"metadata\"\n        id=\"output\"\n        src=\"https://chat.tss2020.site/files/output.mp3\"\n      ></audio>\n\n      <div className=\"container\">\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n        \n          contentLabel=\"Example Modal\"\n          ariaHideApp={false}\n        >\n          <TextContainer users={users} closeModal = {closeModal}/>\n        </Modal>\n        <InfoBar room={room} userscount={users.length} openModal={openModal}/>\n        <Messages\n          messages={messages}\n          name={name}\n          loadOld={curLoadedcount}\n          socket={socket}\n        />\n\n        {selectedFile && (\n          <React.Fragment>\n            <FileSpawn\n              selectedFile={selectedFile}\n              setSelectedFile={setSelectedFile}\n              loaded={loaded}\n            />\n          </React.Fragment>\n        )}\n        <Input\n          message={message}\n          fileName={fileName}\n          setFileName={setFileName}\n          setMessageDate={setMessageDate}\n          sendFile={sendFile}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n          selectedFile={selectedFile}\n          setSelectedFile={setSelectedFile}\n          loaded={loaded}\n          setLoaded={setLoaded}\n          messageType={messageType}\n          setMessageType={setMessageType}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","C:\\Users\\Timon\\Desktop\\MixChatUpdate\\Client\\src\\components\\ImageShower\\ImageShower.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":8,"column":11,"nodeType":"64","messageId":"65","endLine":8,"endColumn":20},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","replacedBy":"67"},{"ruleId":"58","replacedBy":"68"},{"ruleId":"60","replacedBy":"69"},{"ruleId":"58","replacedBy":"70"},{"ruleId":"60","replacedBy":"71"},{"ruleId":"62","severity":1,"message":"72","line":140,"column":9,"nodeType":"64","messageId":"65","endLine":140,"endColumn":23},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'SAS_TOKEN' is assigned a value but never used.","Identifier","unusedVar",["73"],["74"],["73"],["74"],["73"],["74"],"'getStorageData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]